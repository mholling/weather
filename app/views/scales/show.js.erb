<%- first_date = Observation.chronological.first.meteorological_date.send("end_of_#{@scale.units.singularize}").to_date -%>
<%- last_date = Observation.chronological.last.meteorological_date.send("end_of_#{@scale.units.singularize}").to_date -%>

var dateSelect = {
  container: $('#<%= dom_id(@scale) %> .date'),
  
  init: function() {
    this.container.html('<%= escape_javascript(render @scale)%>');
    
    this.container.find('.year').bind('change', this, function(event) {
      event.data.fillMonths();
      event.data.fillDays();
      event.data.container.find('.day').change();
    });
    
    this.container.find('.month').bind('change', this, function(event) {
      event.data.fillDays();
      event.data.container.find('.day').change();
    });
    
    this.container.find('.day').bind('change', this, function(event) {
      event.data.enablePrevNext();
      year = event.data.container.find('.year option:selected').get(0).value;
      month = event.data.container.find('.month option:selected').get(0).value;
      day = event.data.container.find('.day option:selected').get(0).value;
      event.data.container.data('date', new Date(year, month, day))
      event.data.container.parents('.scale').find('.content').empty();
      app.scalings.refresh();
    });
        
    this.container.find('.prev').bind('click', this, function(event) {
      if (event.data.container.find('.day option:selected').attr('selected', '').prev().attr('selected', 'selected').none()) {
        if (event.data.container.find('.month option:selected').attr('selected', '').prev().attr('selected', 'selected').none()) {
          event.data.container.find('.year option:selected:not(:first-child)').attr('selected', '').prev().attr('selected', 'selected');
          event.data.fillMonths();
          event.data.container.find('.month option:last').attr('selected', 'selected');
        }
        event.data.fillDays();
        event.data.container.find('.day option:last-child').attr('selected', 'selected');
      }
      event.data.container.find('.day').change();
    });
    
    this.container.find('.next').bind('click', this, function(event) {
      if (event.data.container.find('.day option:selected').attr('selected', '').next().attr('selected', 'selected').none()) {
        if (event.data.container.find('.month option:selected').attr('selected', '').next().attr('selected', 'selected').none()) {
          event.data.container.find('.year option:selected:not(:last-child)').attr('selected', '').next().attr('selected', 'selected');
          event.data.fillMonths();
          event.data.container.find('.month option:first').attr('selected', 'selected');
        }
        event.data.fillDays();
        event.data.container.find('.day option:first').attr('selected', 'selected');
      }
      event.data.container.find('.day').change();
    });

    this.fillYears();
    this.container.find('.year option:last-child').attr('selected', 'selected');
    this.fillMonths();
    this.container.find('.month option:last-child').attr('selected', 'selected');
    this.fillDays();
    this.container.find('.day option:last-child').attr('selected', 'selected');
    
    this.container.find('.day').change();
  },
  
  fillYears: function() {
    this.container.find('.year').empty();
    for (year = <%= first_date.year %>; year <= <%= last_date.year %>; year++) {
      this.container.find('.year').append('<option value="'+year+'">'+year+'</option>');
    };
  },
  
  fillMonths: function() {
    this.container.find('.month').empty();
    <%- case @scale.units -%>
    <%- when "years" -%>
      this.container.find('.month').append('<option value="0"></option>');
      this.container.find('.month').hide();
    <%- else -%>
      monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      year = this.container.find('.year option:selected').get(0).value;
      for (month = 0; month < 12; month++) {
        if (year > <%= first_date.year %> || month >= <%= first_date.month - 1 %>) {
          if (year < <%= last_date.year %> || month <= <%= last_date.month - 1 %>) {
            this.container.find('.month').append('<option value="'+month+'">'+monthNames[month]+'</option>');
          };
        };
      };
    <%- end -%>
  },
  
  fillDays: function() {
    this.container.find('.day').empty();
    year = this.container.find('.year option:selected').get(0).value;
    month = this.container.find('.month option:selected').get(0).value;
    <%- case @scale.units -%>
    <%- when "years", "months" -%>
      this.container.find('.day').append('<option value="1"></option>');
      this.container.find('.day').hide();
    <%- when "weeks" -%>
      for (day = 1; day <= 31; day++) {
        date = new Date(year, month, day)
        if (date.getMonth() == month && date.getDay() == 0) {
          if (date.getFullYear() > <%= first_date.year %> || date.getMonth() > <%= first_date.month - 1 %> || date.getDate() >= <%= first_date.day %>) {
            if (date.getFullYear() < <%= last_date.year %> || date.getMonth() < <%= last_date.month - 1 %> || date.getDate() <= <%= last_date.day %>) {
              this.container.find('.day').append('<option value="'+date.getDate()+'">'+date.getDate()+'</option>');
            };
          };
        };
      };
    <%- when "days" -%>
      this.container.find('.day').empty();
      for (day = 1; day <= 31; day++) {
        if (year > <%= first_date.year %> || month > <%= first_date.month - 1 %> || day >= <%= first_date.day %>) {
          if (year < <%= last_date.year %> || month < <%= last_date.month - 1 %> || day <= <%= last_date.day %>) {
            if ((new Date(year, month, day)).getMonth() == month) {
              this.container.find('.day').append('<option value="'+day+'">'+day+'</option>');
            };
          };
        };
      };
    <%- end -%>
  },
  
  enablePrevNext: function() {
    this.container.find('.next').attr('disabled', this.container.find('select option:selected:not(:last-child)').any() ? '' : 'disabled');
    this.container.find('.prev').attr('disabled', this.container.find('select option:selected:not(:first-child)').any() ? '' : 'disabled');
  }
}

dateSelect.init();
